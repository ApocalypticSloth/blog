<div class="container">
    <div class="row">
        <h3>Fundermentals of software design</h3>
        <p>Apparently, software engineering essentailly splits down into two key concepts
	1) problem solving- in coding, problem solving fundermentally comes down to taking a large problem, and breaking it down into lots of smaller problems. Each of these are much easier to solve, and if there is a problem with your eventually solution it becomes simpler to figure out where the main issue is. Because all of these smaller problems are just parts of a larger whole, it is also necessary to keep your mind on the main problem. The typical analogy is that of a plate spinner: you have to keep each of the plates spinning while being aware of the others to make sure the whole performance comes together.</p>
	<p>2) being lazy- being lazy in coding involves finding the minimum amount of work needed to solve a problem. It doesn't mean cutting corners or coding badly- your goal is always primarily to write excellent code that works as flawlessly and quickly as possible- it just means doing that with as little effort as you can. For me, this is where the creative part comes in. When faced with restrictions, we become more creative- and the restriction of time and effort, albeit artificial, forces us to find the best and easiest solution to the problem at hand </p>
    </div>
  </div>
</div>
